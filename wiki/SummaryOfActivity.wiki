#summary Summary Of Activity

= Activity =

*July 25th, 2012*

Added new rule that validates if the name of a Class, Method, Field, contains the name of its type, hence a class called `MyClass` would raise a violation.

*July 26th, 2012*

Added a new rule that validates if constant, field or variable, are spelled with the `PascalCase` naming convention.

*July 27th, 2012*

Bug fix in the `NameHasNonEnglishCharacter` rule where strongly types class, would violate the rule because of the `<T>` suffix.

Optimizations to the `ClassContainsTooManyLine`, `MethodContainsTooManyLine` and `PropertyContainsTooManyLine` rules.

Revised the resource test rules to correctly have the right amount of lines in Class, Method and Property to match the rule correctly, as the rule optimization listed above included a fix where the number of lines reported was off by one.

Update the Trunk to match [http://stylecop.codeplex.com/ StyleCop] v4.7.35.0

*July 28th, 2012*

Modified the rule `VariableNameIsTooShort`. Before the change, the rule would simply validate the list of variables contained inside a method. Effectively, it was allowing the use of a variable too short when defined in a `for` statement. Now, the variable initialized in a `for` loop declaration is looked after, and if the `for` loop is less than 10 lines, the rule will allow a short name, but if the loop is more than 10 lines, it will raise a violation. 

[http://www.objectmentor.com/omTeam/martin_r.html Robert C. Martin] says in his [http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882 Clean Code] book that if the for loop is 5 lines long, a short variable is acceptable, but I felt 10 was better, specially since 3 of those lines are the for the declaration and the opening and closing squidlies....


*July 31st, 2012*

Sight, I assumed way too much. I was under the impression that, when I was using the `method.Variables` that would return me all the variables ever declared under the specified method. Boy was I wrong. So, I ended up adding more code inside the Resources directory and adjusted the add-in code accordingly. Now, it catches a lot more stuff that it was before. Assumption is the mother of all screw ups. And I screwed up. :D


*August 8th, 2012*

Enhancement to the trailing spaces rule. I have added a list of characters that can be followed by a space. This is a must when splitting code lines on multiple lines. Modified the too many comments rule to exclude `// TODO`, `// HACK` and `// UNDONE` comments.


*August 24th, 2012*

Fixed a problem with rule `FileNameMustMatchTypeName` where the rule was not detecting the name of the file versus the type, when the file had more than one extension, eg: `SomeFile.designer.cs`.

Change the rule detecting train wrecks. Now, the line is split at spaces, and then, the check for train wreck is executed. So, it is now possible to have more than 3 "wagons", just not in the same line part.


*August 30th, 2012*

No code change, updated the Trunk to match [http://stylecop.codeplex.com/ StyleCop] v4.7.36.0


*September 4th, 2012*

Added a new download. I made this for people that were bitching about the trailing spaces rule. Its a Visual Studio 2010 add-in that removes the trailing spaces of a code file in one swift swoop. The add-in adds a new tool in the `Tools` menu of Visual Studio. The included `README.TXT` details the actions required to install it, or rather, extract it at the right place on your drive for Visual Studio to pick it up.


*September 18th, 2012*

Virtually no code change, updated the Trunk to match [http://stylecop.codeplex.com/ StyleCop] v4.7.37.0


*September 27th, 2012*

Added the `TrailingSpacesRemover` source code in a sub-directory under this project. Also added another subdirectory called `StyleCopMergeAndStyle` for a new tool I made that allows, from the command prompt, to merge multiple [http://stylecop.codeplex.com/ StyleCop] violations files and apply a style sheet to the output in order to display the result in a Web browser.

*October 3rd, 2012*

Updated the Trunk to match [http://stylecop.codeplex.com/ StyleCop] v4.7.40.0. Added a `batch file` and an `msbuild file` next to the `solution file` to run [http://stylecop.codeplex.com/ StyleCop] at the command prompt and extract the violations contained in the project. Some house cleaning, moved the `TrailingSpacesRemover` and `StyleCopMergeAndStyle` to the Tools directory. Added an extra line in the report generated by `StyleCopMergeAndStyle` so in includes the attribute required to suppress a rule.

*October 25th, 2012*
Major overhaul in the add-in. Went from a static class design back to concrete classes, in order to facilitate the addition of new rules and enforce a better control design through interfaces. Optimized speed and fixed 2 bugs, one related to the suppression of some rules (thank you Andy) and the other related to the fact that on occasion, [http://stylecop.codeplex.com/ StyleCop] would freeze during a `Rrescan All`. Updated the Trunk to match [http://stylecop.codeplex.com/ StyleCop] v4.7.41.0.
